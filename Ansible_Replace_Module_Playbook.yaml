# ******************************************************* Scenario: Ansible Replace Module ****************************************************

# There is data on all app servers in Stratos DC. The Nautilus development team shared some requirement with the DevOps team to alter some of the data as per recent changes. The DevOps team is working to prepare an Ansible playbook to accomplish the same. Below you can find more details about the task.

# Create a playbook.yml under /home/thor/ansible on jump host; an inventory is already place under /home/thor/ansible on Jump host itself.

# We have a file /opt/finance/blog.txt on app server 1. Using Ansible replace module replace string xFusionCorp to Nautilus in that file.

# We have a file /opt/finance/story.txt on app server 2. Using Ansiblereplace module replace string Nautilus to KodeKloud in that file.

# We have a file /opt/finance/media.txt on app server 3. Using Ansible replace module replace string KodeKloud to xFusionCorp Industries in that file.

# Note: Validation will try to run playbook using command ansible-playbook -i inventory playbook.yml so please make sure playbook works this way, without passing any extra arguments.

# -------------------------------------------------------------------------------------------------------------------------------------------
# Solution:

# step-1: write playbook

# vi /home/thor/ansible/playbook.yml

- name: ansible playbook for replace module demo
  hosts: all
  become: true
  tasks:
  - name: replace text in blog.txt file in app1a
    replace:
	  path: /opt/finance/blog.txt
	  regexp: "xFusionCorp"
	  replace: "Nautilus"
	when: ansible_hostname == "stapp01"
  - name: replace text in story.txt file in app2a
    replace:
	  path: /opt/finance/story.txt
	  regexp: "Nautilus"
	  replace: "KodeKloud"
	when: ansible_hostname == "stapp02"
  - name: replace text in media.txt file in app3a
    replace:
	  path: /opt/finance/media.txt
	  regexp: "KodeKloud"
	  replace: "xFusionCorp Industries"
	when: ansible_hostname == "stapp03"
	
# 2. Complile and run playbook

# ansible-playbook -i inventory playbook --syntax-check
# ansible-playbook -i inventory playbook --check
# ansible-playbook -i inventory playbook

# 3. Verification:
# login each app server and verify the files


	
